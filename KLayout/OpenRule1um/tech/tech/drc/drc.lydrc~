<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description/>
 <version/>
 <category>drc</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>true</show-in-menu>
 <group-name>drc_scripts</group-name>
 <menu-path>tools_menu.drc.end</menu-path>
 <interpreter>dsl</interpreter>
 <dsl-interpreter-name>drc-dsl-xml</dsl-interpreter-name>
 <text># 1um Standard Rule DRC
# ver1.00 : 2018/2/10:  akita11 akita@ifdl.jp
# ver1.01 : 2018/2/23:  akita11 akita@ifdl.jp (bug fix)
# ver1.10 : 2018/3/17:  akita11 akita@ifdl.jp (add rules based on rule v110)
# ver1.20 : 2018/4/13:  akita11 akita@ifdl.jp (add rules based on rule v120)
# ver1.30 : 2018/11/27: akita11 akita@ifdl.jp (add rules based for HPOL)
# ver1.31 : 2018/11/28: akita11 akita@ifdl.jp (modified HPOL gap rule)
# klayout v0.1: 2019/5/7: seijiro.moriyama@anagix.com

# Get raw layers
nwl = input(1, 0)
nwl_dp = input(2, 0)
diff = input(3, 0) 
pol = input(5, 0)
hpol = input(6,0)
cnt = input(7, 0)
ml1 = input(8, 0)
via1 = input(9, 0) 
ml2 = input(10, 0)
via2 = input(11, 0)
ml3 = input(12, 0)
text = input(13, 0)
frame = input(14, 0)
res = input(15, 0)
cap = input(16, 0)
dio = input(17, 0)
parea = input(18, 0)
narea = input(19, 0)
pad = input(20, 0)
dm_dcn = input(101, 0)
dm_pcn = input(102, 0)
dm_nscn = input(103, 0)
dm_pscn = input(104, 0)
dm_via1 = input(105, 0)
dm_via2 = input(106, 0)

# Form derived layers
# PSUB = geomNot(NWL); # psub
psub = !nwl

#Ndiff = geomAnd(DIFF, Narea);
ndiff = diff &amp; narea

#Pdiff = geomAnd(DIFF, Parea);
pdiff = diff &amp; parea

#NMOS = geomAnd(Ndiff, POL); # nMOS channel
nmos = ndiff &amp; pol

#PMOS = geomAnd(Pdiff, POL); # pMOS channel
pmos = pdiff &amp; pol

#MOS = geomOr(NMOS, PMOS);
mos = nmos + pmos

#HIPOL = geomAnd(HPOL, POL); # HighPolyResistor
hipol = hpol &amp; pol

puts 'Check GAP'
#geomSpace(NWL, 4, "NWL space &lt; 4.0")
r_nwl_s = nwl.space(4.um); r_nwl_s.output("NWL space &lt; 4.0")

#geomSpace(NWL_dp, 5, "NWL(diff.pot) space &lt; 5.0")
r_nwl_dp_s = nwl_dp.space(5.um); r_nwl_dp_s.output("NWL diff.pot space", 'NWL(diff.pot) space &lt; 5.0')
geomSpace(Parea, 0.5, "Parea space &lt; 0.5")
geomSpace(Narea, 0.5, "Narea space &lt; 0.5")
#geomSpace(Parea, Narea, 0.5, "Parea-Narea space &lt; 0.5")
r_parea_narea_s = parea.separation(narea, 0.5.um); r_parea_narea_s.output("Parea-Narea space &lt; 0.5")
geomSpace(DIFF, 1.5, "DIFF space &lt; 1.5")
geomSpace(NWL, Ndiff, 3,  "NWL-Ndiff space &lt; 3.0")
geomSpace(Pdiff, DM_nscn, 0.5, "Pdiff-NScont space &lt; 0.5")
geomSpace(Ndiff, DM_pscn, 1.0, "Ndiff-PScont space &lt; 1.0")
geomSpace(POL, 1.0, "POL space &lt; 1.0")
geomSpace(MOS, 1, " POL(MOS) space &lt; 1.0")
geomSpace(POL, DIFF, 0.5, "POL-diff space &lt; 0.5")
geomSpace(DIFF, DM_dcn, 1, "Diff-dcont space &lt; 1.0")
geomSpace(MOS, DM_dcn, 0.5, "MOS-dcont space &lt; 0.5")
geomSpace(DIFF, DM_pcn, 1.0, "Diff-pcont space &lt; 1.5")
geomSpace(POL, DM_pcn, 0.5, "POL-pcont space &lt; 0.5")
geomSpace(ML1, 1, "ML1 space &lt; 1.0")
geomSpace(ML2, 1, "ML2 space &lt; 1.0")
geomSpace(ML3, 1, "ML3 space &lt; 1.0")
geomSpace(ML1, DM_dcn, 0.5, "ML1-dcont space &lt; 0.5")
geomSpace(ML1, DM_pcn, 0.5, "ML1-pcont space &lt; 0.5")
geomSpace(DM_via1, 0.5, "via1 space &lt; 0.5")
geomSpace(DM_via2, 0.5, "via2 space &lt; 0.5")
#geomSpace(ML1, DM_nscn, 1, "ML1-nsubcont space &lt; 1.0")
#geomSpace(ML1, DM_pscn, 1, "ML1-psubcont space &lt; 1.0")
geomSpace(ML1, DM_via1, 0.5, "ML1-via1 space &lt; 0.5")
geomSpace(ML2, DM_via1, 0.5, "ML2-via1 space &lt; 0.5")
geomSpace(ML2, DM_via2, 0.5, "ML2-via2 space &lt; 0.5")
geomSpace(ML3, DM_via2, 0.5, "ML3-via2 space &lt; 0.5")
geomSpace(DM_via1, DM_dcn, 0.5, "via1-dcont space &lt; 0.5")
geomSpace(DM_via1, DM_pcn, 0.5, "via1-pcont space &lt; 0.5")
geomSpace(DM_via1, DM_nscn, 0.5, "via1-nscont space &lt; 0.5")
geomSpace(DM_via1, DM_pscn, 0.5, "via1-pscont space &lt; 0.5")
geomSpace(DM_via1, DM_via2, 0.5, "via1-via2 space &lt; 0.5")
geomSpace(DM_dcn, 1.0, "dcont space &lt; 1.0")
#geomSpace(HIPOL, 1.0, "Poly in HPOL space &lt; 1.0")
geomSpace(HIPOL, 2.0, "Poly in HPOL space &lt; 2.0")
geomSpace(POL, HIPOL, 1.0, "Poly outside HPOL space &lt; 1.0")

puts 'Check Overlap'
DM_dcn_r = geomGetRawShapes("DM_dcn", "drawing")
DM_dcn_r_ovlp = geomAnd(DM_dcn_r)
geomArea(DM_dcn_r_ovlp, 0, 0, "dcont overlap")

DM_pcn_r = geomGetRawShapes("DM_pcn", "drawing")
DM_pcn_r_ovlp = geomAnd(DM_pcn_r)
geomArea(DM_pcn_r_ovlp, 0, 0, "pcont overlap")

DM_nscn_r = geomGetRawShapes("DM_nscn", "drawing")
DM_nscn_r_ovlp = geomAnd(DM_nscn_r)
geomArea(DM_nscn_r_ovlp, 0, 0, "nsubcont overlap")

DM_pscn_r = geomGetRawShapes("DM_pscn", "drawing")
DM_pscn_r_ovlp = geomAnd(DM_pscn_r)
geomArea(DM_pscn_r_ovlp, 0, 0, "psubcont overlap")

DM_via1_r = geomGetRawShapes("DM_via1", "drawing")
DM_via1_r_ovlp = geomAnd(DM_via1_r)
geomArea(DM_via1_r_ovlp, 0, 0, "via1 overlap") # not shown in rule v110

DM_via2_r = geomGetRawShapes("DM_via2", "drawing")
DM_via2_r_ovlp = geomAnd(DM_via2_r)
geomArea(DM_via2_r_ovlp, 0, 0, "via2 overlap") # not shown in rule v110

DM_dcn_MOS = geomAnd(DM_dcn, MOS)
geomArea(DM_dcn_MOS, 0, 0, "dcn-MOS overlap")

#DM_via1_via2 = geomAnd(DM_via1, DM_via2)
#geomArea(DM_via1_via2, 0, 0, "via1-via2 overlap")
#DM_via1_dcont = geomAnd(DM_via1, DM_dcn)
#geomArea(DM_via1_via2, 0, 0, "via1-dcont overlap")
#DM_via1_pcont = geomAnd(DM_via1, DM_pcn)
#geomArea(DM_via1_via2, 0, 0, "via1-pcont overlap")

print "Check Stacked Con/Via"
geomArea(geomAnd(DM_pcn, DM_via1), 4, 4, "pcont-via1 non-stack")
geomArea(geomAnd(DM_dcn, DM_via1), 4, 4, "dcont-via1 non-stack")
geomArea(geomAnd(DM_via1, DM_via2), 4, 4, "via1-via2 non-stack")

print "Check Width"
geomWidth(NWL,  4, "NWL width &lt; 4.0")
geomWidth(NWL_dp, 4, "NWL(diff.pot) width &lt; 4.0")
geomWidth(Parea,  0.5, "Parea width &lt; 0.5")
geomWidth(Narea,  0.5, "Narea width &lt; 0.5")
geomWidth(DIFF,  1.0, "DIFF width &lt; 1.0")
geomWidth(POL,  1, "POL width &lt; 1.0")
geomWidth(ML1, 1, "ML1 width &lt; 1.0")
geomWidth(ML2, 1, "ML2 width &lt; 1.0")
geomWidth(ML3, 1, "ML3 width &lt; 1.0")
geomWidth(HIPOL, 2.0, "Poly in HPOL width &lt; 2.0")

## ToDo: check HIPOL length (20-80um) (181127:akita11)

print "Check Enclose"
geomEnclose(NWL, Pdiff, 2, "Pdiff enclosure in NWL &lt; 2.0")
geomArea(geomAnd(PSUB, DM_nscn), 0, 0, "nsubcon outside NWL") # not shown in rule v110
geomEnclose(Parea, DIFF, 0.5, "DIFF enclosure in Parea &lt; 0.5")
geomEnclose(Narea, DIFF, 0.5, "DIFF enclosure in Narea &lt; 0.5")
geomEnclose(HPOL, HIPOL, 5.0, "POL enclosure in HPOL &lt; 5.0")

print "Check MOS gate extension"
geomExtension(POL, DIFF, 1, "POL gate extension &lt; 1.0")

print "Check stand-alone Cont/Via"
DMcnt1 = geomOr(DM_dcn, DM_pcn)
DMcnt2 = geomOr(DMcnt1, DM_nscn)
DMcnt = geomOr(DMcnt2, DM_pscn)
SAcnt = geomAnd(CNT, geomNot(DMcnt))
geomArea(SAcnt, 0, 0, "Stand alone Cont")
SAvia1 = geomAnd(VIA1, geomNot(DM_via1))
geomArea(SAvia1, 0, 0, "Stand alone VIA1")
SAvia2 = geomAnd(VIA2, geomNot(DM_via2))
geomArea(SAvia2, 0, 0, "Stand alone VIA2")

# Exit DRC package, freeing memory
geomEnd()
#ui().winFit()
# Read about DRC scripts in the User Manual under "Design Rule Check (DRC)"
</text>
</klayout-macro>
